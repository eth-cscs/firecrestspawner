name: trivy-ghcr-scan

on:
  schedule:
    - cron: '0 3 * * 1'  # every Monday at 03:00 UTC
  workflow_dispatch:     # allows manual triggering

permissions:
  contents: read
  security-events: write  # required for SARIF upload
  packages: read          # required to access GHCR images

jobs:
  get-tags:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.get_tags.outputs.tags }}
    steps:
    - name: Fetch all tags from GHCR
      id: get_tags
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OWNER: eth-cscs
        PACKAGE: f7t4jhub
      run: |
        echo "Fetching tags for ghcr.io/$OWNER/$PACKAGE..."
    
        URL="https://api.github.com/orgs/$OWNER/packages/container/$PACKAGE/versions?per_page=100"
    
        TAGS=$(curl -s -H "Authorization: Bearer $GH_TOKEN" "$URL" \
          | jq -r '.[] | .metadata.container.tags[]?' | sort -r | head -n 10)
    
        if [ -z "$TAGS" ]; then
          echo "No tags found or authentication failed"
          exit 1
        fi
    
        echo "Found tags:"
        echo "$TAGS"
    
        # Convert tags to JSON array for the matrix
        TAGS_JSON=$(echo "$TAGS" | jq -R . | jq -s .)
        echo "tags=$TAGS_JSON" >> "$GITHUB_OUTPUT"

  trivy-scan:
    needs: get-tags
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ${{ fromJson(needs.get-tags.outputs.tags) }}
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@v0.24.0
        with:
          image-ref: ghcr.io/eth-cscs/f7t4jhub:${{ matrix.tag }}
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy-results-${{ matrix.tag }}.sarif
          severity: CRITICAL,HIGH

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results-${{ matrix.tag }}.sarif
