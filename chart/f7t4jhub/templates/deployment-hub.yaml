apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-hub
  labels:
    app: hub
  annotations:
    {{- if .Values.vault.enabled }}
    configmap.reloader.stakater.com/reload: "{{ .Release.Name }}-configmap"
    secret.reloader.stakater.com/reload: "{{ .Release.Name }}-common-secrets"
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hub
  template:
    metadata:
      labels:
        app: hub
    spec:
      securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
      containers:
      - name: hub
        image: {{ .Values.hub.image }}
        imagePullPolicy: Always
        command:
          - "/bin/bash"
          - "-c"
          - ". /opt/conda/bin/activate && conda activate py311 && jupyterhub --config /etc/config/jupyterhub_config.py"
          - "--ip 0.0.0.0"
        ports:
        - containerPort: {{ .Values.network.appPort }}
        env:
          - name: FIRECREST_URL
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: firecrestUrl
          - name: AUTH_TOKEN_URL
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: authTokenUrl
          - name: CONFIGPROXY_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: configproxyAuthToken
          {{- if .Values.vault.enabled }}
          - name: KC_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-common-secrets
                key: kc_client_id
          - name: KC_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-common-secrets
                key: kc_client_secret
          {{- end }}
        volumeMounts:
          - name: db-pvc
            mountPath: /home/juhu
          - name: jupyterhub-config
            mountPath: /etc/config
      volumes:
        - name: db-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
        - name: jupyterhub-config
          configMap:
            name: {{ .Release.Name }}-configmap
            items:
              - key: jupyterhub-config
                path: jupyterhub_config.py
      {{- if .Values.vault.enabled }}
      imagePullSecrets:
      - name: {{ .Release.Name }}-registry-docker-config
      {{- end }}
